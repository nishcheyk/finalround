{
    "openapi": "3.0.3",
    "info": {
      "title": "Event Booking API",
      "version": "1.0.0",
      "description": "API for user registration, login, event management, and ticket booking with separate booking management for seats"
    },
    "servers": [
      {
        "url": "http://localhost:3000/api"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "UserRegister": {
          "type": "object",
          "required": ["name", "email", "phone", "password"],
          "properties": {
            "name": { "type": "string", "example": "John Doe" },
            "email": { "type": "string", "format": "email", "example": "johndoe@example.com" },
            "phone": { "type": "string", "example": "+1234567890" },
            "password": { "type": "string", "format": "password", "example": "Password123" }
          }
        },
        "UserLogin": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": { "type": "string", "format": "email", "example": "johndoe@example.com" },
            "password": { "type": "string", "format": "password", "example": "Password123" }
          }
        },
        "AuthToken": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI..."
            }
          }
        },
        "EventCreate": {
          "type": "object",
          "required": ["title", "description", "date", "totalSeats"],
          "properties": {
            "title": { "type": "string", "example": "Sample Event" },
            "description": { "type": "string", "example": "This is a sample event description." },
            "date": { "type": "string", "format": "date-time", "example": "2025-08-15T19:00:00.000Z" },
            "totalSeats": { "type": "integer", "example": 100 }
          }
        },
        "EventResponse": {
          "type": "object",
          "properties": {
            "_id": { "type": "string", "example": "612e1b9f1f1e4b001abc1234" },
            "title": { "type": "string", "example": "Sample Event" },
            "description": { "type": "string", "example": "This is a sample event description." },
            "date": { "type": "string", "format": "date-time", "example": "2025-08-15T19:00:00.000Z" },
            "totalSeats": { "type": "integer", "example": 100 }
           
          }
        },
        "EventResponseWithMessage": {
          "type": "object",
          "properties": {
            "message": { "type": "string", "example": "Event created" },
            "event": { "$ref": "#/components/schemas/EventResponse" }
          }
        },
        "BookTicketRequest": {
          "type": "object",
          "required": ["eventId", "seatNumber", "phone", "userId", "email"],
          "properties": {
            "eventId": { "type": "string", "example": "612e1b9f1f1e4b001abc1234" },
            "seatNumber": { "type": "integer", "example": 5 },
            "phone": { "type": "string", "example": "+1234567890" },
            "userId": { "type": "string", "example": "5f8f8c44b54764421b7156c6" },
            "email": { "type": "string", "format": "email", "example": "user@example.com" }
          }
        },
        "BookTicketResponse": {
          "type": "object",
          "properties": {
            "message": { "type": "string", "example": "Ticket booked successfully" },
            "booking": {
              "type": "object",
              "description": "Booking details including QR code",
              "properties": {
                "_id": { "type": "string", "example": "612e1b9f1f1e4b001abc5678" },
                "eventId": { "type": "string", "example": "612e1b9f1f1e4b001abc1234" },
                "userId": { "type": "string", "example": "5f8f8c44b54764421b7156c6" },
                "seatNumber": { "type": "integer", "example": 5 },
                "qrCode": { "type": "string", "example": "<base64encoded string>" },
                "status": { "type": "string", "enum": ["booked", "cancelled"], "example": "booked" }
              }
            }
          }
        },
        "Booking": {
          "type": "object",
          "properties": {
            "_id": { "type": "string", "example": "612e1b9f1f1e4b001abc5678" },
            "eventId": { "type": "string", "example": "612e1b9f1f1e4b001abc1234" },
            "userId": { "type": "string", "example": "5f8f8c44b54764421b7156c6" },
            "seatNumber": { "type": "integer", "example": 5 },
            "qrCode": { "type": "string", "example": "<base64encoded string>" },
            "status": { "type": "string", "enum": ["booked", "cancelled"], "example": "booked" }
          }
        }
      }
    },
    "paths": {
      "/users/register": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Users"],
          "requestBody": {
            "required": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserRegister" } } }
          },
          "responses": {
            "201": {
              "description": "User successfully registered",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "User Registered!" },
                      "userId": { "type": "string", "example": "605c3c2b8a92c65a30f0e4f1" }
                    }
                  }
                }
              }
            },
            "400": { "description": "Email already exists" }
          }
        }
      },
      "/users/login": {
        "post": {
          "summary": "User login to receive JWT token",
          "tags": ["Users"],
          "requestBody": {
            "required": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserLogin" } } }
          },
          "responses": {
            "200": {
              "description": "Successful login with token",
              "content": {
                "application/json": { "schema": { "$ref": "#/components/schemas/AuthToken" } }
              }
            },
            "401": { "description": "Invalid credentials" }
          }
        }
      },
      "/events": {
        "get": {
          "summary": "List all events",
          "tags": ["Events"],
          "responses": {
            "200": {
              "description": "A list of events",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/EventResponse" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new event",
          "tags": ["Events"],
          "security": [ { "bearerAuth": [] } ],
          "requestBody": {
            "required": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventCreate" } } }
          },
          "responses": {
            "201": {
              "description": "Event created successfully",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/EventResponseWithMessage" }
                }
              }
            },
            "400": { "description": "Validation error or event exists on date" }
          }
        }
      },
      "/events/{id}": {
        "get": {
          "summary": "Get event by ID",
          "tags": ["Events"],
          "parameters": [{
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The event ID"
          }],
          "responses": {
            "200": {
              "description": "Event object (note: seat availability managed separately via Bookings)",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/EventResponse" }
                }
              }
            },
            "404": { "description": "Event not found" }
          }
        },
        "put": {
          "summary": "Update event by ID",
          "tags": ["Events"],
          "security": [ { "bearerAuth": [] } ],
          "parameters": [{
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The event ID"
          }],
          "requestBody": {
            "required": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventCreate" } } }
          },
          "responses": {
            "200": {
              "description": "Event updated",
              "content": {
                "application/json": { "schema": { "$ref": "#/components/schemas/EventResponse" } }
              }
            },
            "404": {
              "description": "Event not found"
            }
          }
        },
        "delete": {
          "summary": "Delete event by ID",
          "tags": ["Events"],
          "security": [ { "bearerAuth": [] } ],
          "parameters": [{
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The event ID"
          }],
          "responses": {
            "204": { "description": "Event deleted successfully" },
            "404": { "description": "Event not found" }
          }
        }
      },
      "/events/{id}/bookings": {
        "get": {
          "summary": "List bookings (booked seats) for an event",
          "tags": ["Bookings"],
          "parameters": [{
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The event ID"
          }],
          "responses": {
            "200": {
              "description": "List of bookings for seats booked in event",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Booking" }
                  }
                }
              }
            },
            "404": { "description": "Event not found" }
          }
        }
      },
      "/bookings": {
        "post": {
          "summary": "Book a ticket for an event",
          "tags": ["Bookings"],
          "security": [ { "bearerAuth": [] } ],
          "requestBody": {
            "required": true,
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BookTicketRequest" } } }
          },
          "responses": {
            "200": {
              "description": "Ticket booked successfully",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/BookTicketResponse" }
                }
              }
            },
            "400": { "description": "Booking error (e.g., seat already booked or invalid input)" },
            "401": { "description": "Unauthorized" }
          }
        }
      }
    }
  }
  